basePath: /api/v1
definitions:
  domain.Account:
    properties:
      alias:
        type: string
      amount:
        type: number
      cvu:
        type: string
      id:
        type: integer
      user_id:
        type: string
    type: object
  domain.Card:
    properties:
      account_id:
        type: integer
      brand:
        type: string
      card_number:
        type: string
      expiration_date:
        type: string
      id:
        type: integer
      owner:
        type: string
      security_code:
        type: string
    type: object
  domain.Transaction:
    properties:
      account_id:
        type: integer
      amount:
        type: number
      description:
        type: string
      destination_cvu:
        type: string
      id:
        type: integer
      origin_cvu:
        type: string
      transaction_date:
        type: string
      transaction_type:
        type: string
    type: object
  handlers.AccountReq:
    properties:
      alias:
        type: string
      cvu:
        type: string
    type: object
  handlers.TransactionReq:
    properties:
      accountID:
        type: integer
      amount:
        type: number
      description:
        type: string
      destination_cvu:
        type: string
      origin_cvu:
        type: string
      transaction_type:
        type: string
    type: object
  handlers.aliasReq:
    properties:
      alias:
        type: string
    type: object
  web.errorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      status:
        type: string
    type: object
host: localhost:8083
info:
  contact:
    email: digitalmoneyhouse.grupo5@gmail.com
    name: Equipo 5
    url: http://www.equipo5.io/support
  description: API para el manejo de cuentas de un usuario
  termsOfService: http://swagger.io/terms/
  title: Entrega final - Equipo 5
  version: "1.0"
paths:
  /api/v1/accounts:
    post:
      consumes:
      - application/json
      parameters:
      - description: body - cvu and alias
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.AccountReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Create account
      tags:
      - Account
  /api/v1/accounts/{UserID}:
    get:
      consumes:
      - application/json
      parameters:
      - description: user ID
        in: path
        name: UserID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Get account by user ID
      tags:
      - Account
  /api/v1/accounts/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID of the account to get
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Get account by ID
      tags:
      - Account
    patch:
      consumes:
      - application/json
      parameters:
      - description: body - alias
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.aliasReq'
      - description: account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Account'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Update account
      tags:
      - Account
  /api/v1/accounts/{id}/activity:
    get:
      consumes:
      - application/json
      parameters:
      - description: account ID
        in: path
        name: id
        required: true
        type: integer
      - description: limit
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Transaction'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Get last transaction
      tags:
      - Transaction
  /api/v1/accounts/{id}/activity/{transactionId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: account ID
        in: path
        name: id
        required: true
        type: integer
      - description: transaction ID
        in: path
        name: transactionId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Transaction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Get transaction by ID
      tags:
      - Transaction
  /api/v1/accounts/{id}/activity/filter:
    get:
      parameters:
      - description: account ID
        in: path
        name: id
        required: true
        type: integer
      - description: type
        in: query
        name: id
        required: true
        type: string
      - description: from
        in: query
        name: id
        type: string
      - description: to
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Transaction'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Filter transactions
      tags:
      - Transaction
  /api/v1/accounts/{id}/cards:
    delete:
      consumes:
      - application/json
      parameters:
      - description: account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Delete card
      tags:
      - Card
    get:
      consumes:
      - application/json
      parameters:
      - description: account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Card'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Get all cards by account ID
      tags:
      - Card
    post:
      consumes:
      - application/json
      parameters:
      - description: account ID
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.Card'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Card'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Create card
      tags:
      - Card
  /api/v1/accounts/{id}/cards/{idCard}:
    get:
      consumes:
      - application/json
      parameters:
      - description: card ID
        in: path
        name: idCard
        required: true
        type: integer
      - description: account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Card'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Get card by ID
      tags:
      - Card
  /api/v1/accounts/{id}/deposit:
    post:
      consumes:
      - application/json
      parameters:
      - description: account ID
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.TransactionReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Transaction'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Deposit from card
      tags:
      - Transaction
  /api/v1/accounts/{id}/transactions:
    post:
      consumes:
      - application/json
      parameters:
      - description: account ID
        in: path
        name: id
        required: true
        type: integer
      - description: body - cvu and alias
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.TransactionReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Transaction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Create transaction
      tags:
      - Transaction
  /api/v1/accounts/activity/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Transaction'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Get last transactions
      tags:
      - Account
  /api/v1/accounts/byAliasOrCvu/{aliasOrCvu}:
    get:
      consumes:
      - application/json
      parameters:
      - description: alias or cvu
        in: path
        name: aliasOrCvu
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Get account by alias or cvu
      tags:
      - Account
swagger: "2.0"
