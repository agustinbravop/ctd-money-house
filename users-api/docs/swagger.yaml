basePath: /api/v1
definitions:
  domain.User:
    properties:
      dni:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        description: ID es el UUID generado por Keycloak, y tambi√©n es la Primary
          Key en la DB.
        type: string
      lastName:
        type: string
      telephone:
        type: string
    type: object
  handlers.RequestBodyLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handlers.RequestBodyLogout:
    properties:
      refreshToken:
        type: string
    type: object
  handlers.RequestBodyRefreshToken:
    properties:
      refreshToken:
        type: string
    type: object
  handlers.UserReq:
    properties:
      dni:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      telephone:
        type: string
    type: object
  web.errorResponse:
    properties:
      code:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:8081
info:
  contact:
    email: digitalmoneyhouse.grupo5@gmail.com
    name: Equipo 5
    url: http://www.equipo5.io/support
  description: API para el manejo de usuarios
  termsOfService: http://swagger.io/terms/
  title: Entrega final - Equipo 5
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.RequestBodyLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Login
      tags:
      - Auth
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.RequestBodyLogout'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Logout
      tags:
      - Auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UserReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Register
      tags:
      - Auth
  /api/v1/auth/token:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.RequestBodyRefreshToken'
      produces:
      - application/json
      responses:
        "200":
          description: returns jwt
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Refresh Token
      tags:
      - Auth
  /api/v1/auth/validate:
    post:
      consumes:
      - application/json
      parameters:
      - description: header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Validate Token
      tags:
      - Auth
  /api/v1/users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Get user by ID
      tags:
      - User
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UserReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Create user
      tags:
      - User
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Delete user
      tags:
      - User
    get:
      consumes:
      - application/json
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Get all users
      tags:
      - User
    patch:
      consumes:
      - application/json
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Update user
      tags:
      - User
    post:
      consumes:
      - application/json
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Update user
      tags:
      - User
swagger: "2.0"
